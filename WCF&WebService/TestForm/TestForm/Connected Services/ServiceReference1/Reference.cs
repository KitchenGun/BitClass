//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestForm.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/TestService")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int numberField;
        
        private string nameField;
        
        private TestForm.ServiceReference1.SubjectType stypeField;
        
        private int GradeField;

        public Student(int number, string name, SubjectType stype, int grade)
        {
            this.number = number;
            this.name = name;
            this.stype = stype;
            Grade = grade;
        }

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public TestForm.ServiceReference1.SubjectType stype {
            get {
                return this.stypeField;
            }
            set {
                if ((this.stypeField.Equals(value) != true)) {
                    this.stypeField = value;
                    this.RaisePropertyChanged("stype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubjectType", Namespace="http://schemas.datacontract.org/2004/07/TestService")]
    public enum SubjectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NONE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COM = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IT = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GAME = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETC = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IStuManager")]
    public interface IStuManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/PrintAll", ReplyAction="http://tempuri.org/IStuManager/PrintAllResponse")]
        TestForm.ServiceReference1.Student[] PrintAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/PrintAll", ReplyAction="http://tempuri.org/IStuManager/PrintAllResponse")]
        System.Threading.Tasks.Task<TestForm.ServiceReference1.Student[]> PrintAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/StuInsert", ReplyAction="http://tempuri.org/IStuManager/StuInsertResponse")]
        bool StuInsert(TestForm.ServiceReference1.Student stu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/StuInsert", ReplyAction="http://tempuri.org/IStuManager/StuInsertResponse")]
        System.Threading.Tasks.Task<bool> StuInsertAsync(TestForm.ServiceReference1.Student stu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/NumberToStudent", ReplyAction="http://tempuri.org/IStuManager/NumberToStudentResponse")]
        TestForm.ServiceReference1.Student NumberToStudent(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/NumberToStudent", ReplyAction="http://tempuri.org/IStuManager/NumberToStudentResponse")]
        System.Threading.Tasks.Task<TestForm.ServiceReference1.Student> NumberToStudentAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/StuDelete", ReplyAction="http://tempuri.org/IStuManager/StuDeleteResponse")]
        bool StuDelete(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/StuDelete", ReplyAction="http://tempuri.org/IStuManager/StuDeleteResponse")]
        System.Threading.Tasks.Task<bool> StuDeleteAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/StuUpdate", ReplyAction="http://tempuri.org/IStuManager/StuUpdateResponse")]
        bool StuUpdate(int number, TestForm.ServiceReference1.SubjectType type, int grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStuManager/StuUpdate", ReplyAction="http://tempuri.org/IStuManager/StuUpdateResponse")]
        System.Threading.Tasks.Task<bool> StuUpdateAsync(int number, TestForm.ServiceReference1.SubjectType type, int grade);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStuManagerChannel : TestForm.ServiceReference1.IStuManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StuManagerClient : System.ServiceModel.ClientBase<TestForm.ServiceReference1.IStuManager>, TestForm.ServiceReference1.IStuManager {
        
        public StuManagerClient() {
        }
        
        public StuManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StuManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StuManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StuManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestForm.ServiceReference1.Student[] PrintAll() {
            return base.Channel.PrintAll();
        }
        
        public System.Threading.Tasks.Task<TestForm.ServiceReference1.Student[]> PrintAllAsync() {
            return base.Channel.PrintAllAsync();
        }
        
        public bool StuInsert(TestForm.ServiceReference1.Student stu) {
            return base.Channel.StuInsert(stu);
        }
        
        public System.Threading.Tasks.Task<bool> StuInsertAsync(TestForm.ServiceReference1.Student stu) {
            return base.Channel.StuInsertAsync(stu);
        }
        
        public TestForm.ServiceReference1.Student NumberToStudent(int number) {
            return base.Channel.NumberToStudent(number);
        }
        
        public System.Threading.Tasks.Task<TestForm.ServiceReference1.Student> NumberToStudentAsync(int number) {
            return base.Channel.NumberToStudentAsync(number);
        }
        
        public bool StuDelete(int number) {
            return base.Channel.StuDelete(number);
        }
        
        public System.Threading.Tasks.Task<bool> StuDeleteAsync(int number) {
            return base.Channel.StuDeleteAsync(number);
        }
        
        public bool StuUpdate(int number, TestForm.ServiceReference1.SubjectType type, int grade) {
            return base.Channel.StuUpdate(number, type, grade);
        }
        
        public System.Threading.Tasks.Task<bool> StuUpdateAsync(int number, TestForm.ServiceReference1.SubjectType type, int grade) {
            return base.Channel.StuUpdateAsync(number, type, grade);
        }
    }
}
